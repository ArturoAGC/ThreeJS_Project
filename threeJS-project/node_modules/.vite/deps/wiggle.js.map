{
  "version": 3,
  "sources": ["../../wiggle/dist/index.mjs"],
  "sourcesContent": ["import { Vector3 as r, Mesh as a, SphereGeometry as h, MeshBasicMaterial as l, Quaternion as p } from \"three\";\nconst c = {\n  velocity: 0.1,\n  maxStretch: 0.1\n}, o = new r(), d = new r(), s = new a(\n  new h(0.03),\n  new l({ transparent: !0 })\n);\nclass f {\n  constructor(t, e = {}, i = !1) {\n    this.options = { ...c, ...e };\n    const n = t.clone();\n    t.parent.add(n), n.add(t), this.target = t, this.targetHelper = s.clone(), e.scene && e.scene.add(this.targetHelper), this.currentHelper = s.clone(), e.scene && e.scene.add(this.currentHelper), this.currentHelper.add(s.clone()), this.currentHelper.children[0].position.y = -0.1, this._isFirstStep = !0, this.originPosition = t.position.clone(), this.originRotation = t.rotation.clone(), this.oldBoneWorldPosition = new r(), this.oldBoneWorldRotation = new p(), this.target.getWorldPosition(this.oldBoneWorldPosition), this.target.getWorldQuaternion(this.oldBoneWorldRotation), this.restLength = this.target.parent.position.length();\n  }\n  reset() {\n    this._isFirstStep = !0, this.target.position.copy(this.originPosition), this.target.rotation.copy(this.originRotation), this.target.updateMatrixWorld(!0, !1), this.target.getWorldPosition(this.oldBoneWorldPosition);\n  }\n  dispose() {\n    this.reset();\n    const t = this.target.parent, e = t.parent;\n    e.remove(t), e.add(this.target);\n  }\n  update(t = null) {\n    if (!t)\n      if (this.ms) {\n        const i = performance.now();\n        t = i - this.ms, t /= 1e3, this.ms = i;\n      } else\n        this.ms = performance.now(), t = 16 / 1e3;\n    let e = 1;\n    if (t = Math.min(t, 100), t > 0.01 && (e = 2), t >= 100 && (e = 25), !(t < 6e-3))\n      for (let i = 0; i < e; i++)\n        this.step(85e-4 * 100);\n  }\n  step(t) {\n    this.target.parent.updateMatrixWorld(!0, !1), this.targetHelper.position.copy(this.originPosition), this.target.parent.localToWorld(this.targetHelper.position), this._isFirstStep && (this._isFirstStep = !1, this.oldBoneWorldPosition.copy(this.targetHelper.position)), o.copy(this.oldBoneWorldPosition).lerp(\n      this.targetHelper.position,\n      Math.min(this.options.velocity * t, 0.99999)\n    ), this.target.position.copy(o), this.target.parent.worldToLocal(this.target.position), this.oldBoneWorldPosition.copy(o);\n    const e = this.target.parent.getWorldPosition(d);\n    this.currentHelper.position.copy(o), this.currentHelper.updateMatrixWorld(!0, !1), this.currentHelper.lookAt(e);\n    const i = this.target.position.clone();\n    i.normalize(), this.target.up.set(0, 1, 0), this.target.quaternion.setFromUnitVectors(this.target.up, i), this.target.position.set(0, 0, 0), this.target.updateMatrix();\n  }\n}\nexport {\n  f as WiggleBone\n};\n"],
  "mappings": "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",
  "names": []
}
